<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/security/oauth2
	http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd"
	>

	<description> oauth2 config </description>
	<context:component-scan
		base-package="p.minn.oauth.web">
	</context:component-scan>
	<sec:http pattern="/oauth2/token" security="none">
	</sec:http>
	
	<sec:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="oauth2AuthenticationManager">
		<sec:intercept-url pattern="/oauth/token" access="permitAll" />
		<sec:anonymous enabled="false" />
		<sec:http-basic entry-point-ref="oauth2AuthenticationEntryPoint" />
		<sec:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />
		<sec:access-denied-handler ref="oauth2AccessDeniedHandler" />
		<sec:csrf disabled="true"/>
	</sec:http>
	<sec:http pattern="/oauth2/hello**" create-session="never" 
		entry-point-ref="oauth2AuthenticationEntryPoint" use-expressions="true">
		<sec:intercept-url pattern="/oauth2/hello**" access="hasRole('ROLE_SUPERADMIN')" />
		<sec:anonymous enabled="false" />
		<sec:custom-filter ref="oauthResourceServer" before="PRE_AUTH_FILTER" />
		<sec:access-denied-handler ref="oauth2AccessDeniedHandler" />
	</sec:http>
 
	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />
	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
	</bean>

	<oauth2:client-details-service id="clientDetailsService">
		<oauth2:client client-id="oauth2_client"
			authorized-grant-types="password,authorization_code,refresh_token,implicit"
			secret="123456" scope="read,write,trust" />
	</oauth2:client-details-service>
	<bean id="oauth2ClientDetailsUserService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetailsService" />
	</bean>
	<sec:authentication-manager id="oauth2AuthenticationManager">
		<sec:authentication-provider user-service-ref="oauth2ClientDetailsUserService" />
	</sec:authentication-manager>

	<oauth2:authorization-server
		client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
		user-approval-handler-ref="oauthUserApprovalHandler">
		<oauth2:authorization-code />
		<oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password />
	</oauth2:authorization-server>

	<bean id="oauth2AuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />

	<bean id="oauth2AccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	<bean id="oauthUserApprovalHandler"
		class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler" />

	<oauth2:resource-server id="oauthResourceServer"
		resource-id="oauth2-resource" token-services-ref="tokenServices" />
	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="oauth2AuthenticationManager" />
	</bean>
		
</beans>